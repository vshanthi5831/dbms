=> axiosInstance.js:

import axios from "axios";

const axiosInstance = axios.create({
  baseURL: "http://localhost:8000/api/",
});

axiosInstance.interceptors.request.use(
  async (config) => {
    let token = localStorage.getItem("accessToken");

    if (token) {
      config.headers["Authorization"] = `Bearer ${token}`;
    }
    return config;
  },
  (error) => Promise.reject(error)
);

axiosInstance.interceptors.response.use(
  (response) => response,
  async (error) => {
    const originalRequest = error.config;

    if (error.response.status === 401 && !originalRequest._retry) {
      originalRequest._retry = true;

      try {
        const refreshToken = localStorage.getItem("refreshToken");

        const response = await axios.post("http://localhost:8000/api/token/refresh/", {
          refresh: refreshToken
        });

        localStorage.setItem("accessToken", response.data.access);
        axiosInstance.defaults.headers["Authorization"] = `Bearer ${response.data.access}`;

        return axiosInstance(originalRequest);
      } catch (err) {
        console.error("Session expired. Please log in again.");
        localStorage.removeItem("accessToken");
        localStorage.removeItem("refreshToken");
      }
    }

    return Promise.reject(error);
  }
);

export default axiosInstance;




=>Logout.jsx

import { useNavigate } from "react-router-dom";

const Logout = () => {
  const navigate = useNavigate();

  const handleLogout = () => {
    localStorage.removeItem("accessToken");
    localStorage.removeItem("refreshToken");
    alert("Logged out!");
    navigate("/login");
  };

  return <button onClick={handleLogout}>Logout</button>;
};

export default Logout;






import React, { useEffect, useState } from "react";
import axios from "axios";

const OrgDetails = () => {
  const [org, setOrg] = useState(null);

  useEffect(() => {
    axios.get("http://localhost:3001/organizations/1")
      .then(response => setOrg(response.data))
      .catch(error => console.error("Error fetching organization details", error));
  }, []);

  return (
    <div className="profile-card">
      <h2>Organization Details</h2>
      {org ? (
        <>
          <p><strong>Name:</strong> {org.name}</p>
          <p><strong>Founded:</strong> {org.founded}</p>
          <p><strong>Location:</strong> {org.location}</p>
        </>
      ) : (
        <p>Loading...</p>
      )}
    </div>
  );
};

export default OrgDetails;


